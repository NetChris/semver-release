# action.yml
name: 'Enforce SemVer 2 for release'
description: ''

outputs:
  semver_version:
    description: 'The fully matched version'
    value: ${{ steps.parse.outputs.semver_version }}
  major_version:
    description: 'The major version'
    value: ${{ steps.parse.outputs.major_version }}
  minor_version:
    description: 'The minor version'
    value: ${{ steps.parse.outputs.minor_version }}
  patch_version:
    description: 'The patch version'
    value: ${{ steps.parse.outputs.patch_version }}
  pre_release_version:
    description: 'The pre-release version'
    value: ${{ steps.parse.outputs.pre_release_version }}
  build_metadata:
    description: 'The build metadata'
    value: ${{ steps.parse.outputs.build_metadata }}
  major_minor_version:
    description: 'Returns any matching MajorVersion.MinorVersion pattern whether the input is valid SemVer or not.  Useful for development releases whee patch and prerelease values will be provided programmatically.'
    value: ${{ steps.parse.outputs.major_minor_version }}
  fallback_version:
    description: 'A best-effort at returning a SemVer-compatible version'
    value: ${{ steps.parse.outputs.fallback_version }}
  dotnet_assembly_version:
    description: 'A version compatible with versioning .NET assemblies'
    value: ${{ steps.parse.outputs.dotnet_assembly_version }}
  nuget_version:
    description: 'A version compatible with versioning NuGet packages'
    value: ${{ steps.parse.outputs.nuget_version }}

runs:
  using: "composite"
  steps:
    - name: Derive SemVer
      id: parse
      uses: NetChris/parse-semver@11-output-nuget-microsoft-versions
    - name: SemVer Gate
      id: semver_gate
      if: ${{ steps.parse.outputs.semver_version == '' }}
      run: |
        echo ERROR: ${{ steps.parse.outputs.value_to_parse }} does not contain a SemVer version 1>&2
        exit 1
      shell: bash
    - name: Version Gate
      id: version_gate
      if: ${{ steps.parse.outputs.pre_release_version != '' }}
      run: |
        echo ERROR: Cannot release with this version. ${{ steps.parse.outputs.semver_version }} is a pre-release version. 1>&2
        exit 1
      shell: bash
